%PDF-2.0
168 0 obj
<<
	/Type /Catalog
	/Version /PDF-1.7
	/Pages 166 0 R
	/MediaBox 167 0 R
>>
endobj

167 0 obj
[
	0
	0
	595
	842
]
endobj

166 0 obj
<<
	/Type /Pages
	/Kids 165 0 R
	/Count 3
>>
endobj

165 0 obj
[
	58 0 R
	134 0 R
	164 0 R
]
endobj

164 0 obj
<<
	/Type /Page
	/Contents 157 0 R
	/Resources 163 0 R
>>
endobj

163 0 obj
<<
	/Font 162 0 R
>>
endobj

162 0 obj
<<
	/Plain 158 0 R
	/Strong 159 0 R
	/Emphasis 160 0 R
	/Code 161 0 R
>>
endobj

161 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier
>>
endobj

160 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier-Italic
>>
endobj

159 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier-Bold
>>
endobj

158 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier
>>
endobj

157 0 obj
[
	135 0 R
	136 0 R
	137 0 R
	138 0 R
	139 0 R
	140 0 R
	141 0 R
	142 0 R
	143 0 R
	144 0 R
	145 0 R
	146 0 R
	147 0 R
	148 0 R
	149 0 R
	150 0 R
	151 0 R
	152 0 R
	153 0 R
	154 0 R
	155 0 R
	156 0 R
]
endobj

156 0 obj
<<
	/Length 68
>>
stream
BT
	/Plain 12 Tf
	128 428 Td
	1.0 Tw
	(<link rel="stylesheet") Tj
ET
endstream
endobj

155 0 obj
<<
	/Length 53
>>
stream
BT
	/Plain 12 Tf
	72 428 Td
	1.0 Tw
	(</video>) Tj
ET
endstream
endobj

154 0 obj
<<
	/Length 128
>>
stream
BT
	/Code 12 Tf
	96 464 Td
	1.0 Tw
	(<source src="https://github.com/jchilds0/chroma-viz/raw/main/data/artist_demo.mp4"> ) Tj
ET
endstream
endobj

153 0 obj
<<
	/Length 78
>>
stream
	q
	72 488 451 -36 re
	DeviceRGB cs 0.78431374 0.78431374 0.78431374 sc
	f
	Q

endstream
endobj

152 0 obj
<<
	/Length 73
>>
stream
BT
	/Plain 12 Tf
	72 510 Td
	1.0 Tw
	(<video width="720" controls>) Tj
ET
endstream
endobj

151 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 522 Td
	1.0 Tw
	(Putting these together we can create the following graphic.) Tj
ET
endstream
endobj

150 0 obj
<<
	/Length 103
>>
stream
BT
	/Plain 12 Tf
	72 534 Td
	1.0 Tw
	(Doing so makes evaluating them ambiguous, so Chroma Engine) Tj
ET
endstream
endobj

149 0 obj
<<
	/Length 108
>>
stream
BT
	/Plain 12 Tf
	72 546 Td
	1.0 Tw
	(The only restrictions on keyframes is they cannot create cycles) Tj
ET
endstream
endobj

148 0 obj
<<
	/Length 102
>>
stream
BT
	/Plain 12 Tf
	72 558 Td
	1.0 Tw
	(This is what we used above, we add an edge to the upper x) Tj
ET
endstream
endobj

147 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 570 Td
	1.0 Tw
	(Additionally we can set a keyframe to be an expand keyframe,) Tj
ET
endstream
endobj

146 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 592 Td
	1.0 Tw
	(Bind Frame: Use a value computed in a keyframe. This adds an) Tj
ET
endstream
endobj

145 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 614 Td
	1.0 Tw
	(User Frame: Similar to set frame, except the value from the) Tj
ET
endstream
endobj

144 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 636 Td
	1.0 Tw
	(Set Frame: Set the value of an attribute of a geometry in a) Tj
ET
endstream
endobj

143 0 obj
<<
	/Length 75
>>
stream
BT
	/Plain 12 Tf
	72 658 Td
	1.0 Tw
	(Current types of keyframes are) Tj
ET
endstream
endobj

142 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 670 Td
	1.0 Tw
	(When animated, geometry attributes are interpolated linearly) Tj
ET
endstream
endobj

141 0 obj
<<
	/Length 99
>>
stream
BT
	/Plain 12 Tf
	72 682 Td
	1.0 Tw
	(A Keyframe is a way to add dependencies and evaluation) Tj
ET
endstream
endobj

140 0 obj
<<
	/Length 103
>>
stream
BT
	/Plain 12 Tf
	72 694 Td
	1.0 Tw
	(For each frame, we create the table of attributes for each) Tj
ET
endstream
endobj

139 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 706 Td
	1.0 Tw
	(Frames have an index 1, 2, ... up to some fixed number $ n $,) Tj
ET
endstream
endobj

138 0 obj
<<
	/Length 100
>>
stream
BT
	/Plain 12 Tf
	72 718 Td
	1.0 Tw
	(The keyframing process in Chroma Artist consists of two) Tj
ET
endstream
endobj

137 0 obj
<<
	/Length 55
>>
stream
BT
	/Plain 12 Tf
	412 730 Td
	1.0 Tw
	(dark.svg") Tj
ET
endstream
endobj

136 0 obj
<<
	/Length 55
>>
stream
BT
	/Emphasis 12 Tf
	370 730 Td
	1.0 Tw
	(expand) Tj
ET
endstream
endobj

135 0 obj
<<
	/Length 87
>>
stream
BT
	/Plain 12 Tf
	72 730 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/keyframe) Tj
ET
endstream
endobj

134 0 obj
<<
	/Type /Page
	/Contents 127 0 R
	/Resources 133 0 R
>>
endobj

133 0 obj
<<
	/Font 132 0 R
>>
endobj

132 0 obj
<<
	/Plain 128 0 R
	/Strong 129 0 R
	/Emphasis 130 0 R
	/Code 131 0 R
>>
endobj

131 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier
>>
endobj

130 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier-Italic
>>
endobj

129 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier-Bold
>>
endobj

128 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier
>>
endobj

127 0 obj
[
	59 0 R
	60 0 R
	61 0 R
	62 0 R
	63 0 R
	64 0 R
	65 0 R
	66 0 R
	67 0 R
	68 0 R
	69 0 R
	70 0 R
	71 0 R
	72 0 R
	73 0 R
	74 0 R
	75 0 R
	76 0 R
	77 0 R
	78 0 R
	79 0 R
	80 0 R
	81 0 R
	82 0 R
	83 0 R
	84 0 R
	85 0 R
	86 0 R
	87 0 R
	88 0 R
	89 0 R
	90 0 R
	91 0 R
	92 0 R
	93 0 R
	94 0 R
	95 0 R
	96 0 R
	97 0 R
	98 0 R
	99 0 R
	100 0 R
	101 0 R
	102 0 R
	103 0 R
	104 0 R
	105 0 R
	106 0 R
	107 0 R
	108 0 R
	109 0 R
	110 0 R
	111 0 R
	112 0 R
	113 0 R
	114 0 R
	115 0 R
	116 0 R
	117 0 R
	118 0 R
	119 0 R
	120 0 R
	121 0 R
	122 0 R
	123 0 R
	124 0 R
	125 0 R
	126 0 R
]
endobj

126 0 obj
<<
	/Length 97
>>
stream
BT
	/Plain 12 Tf
	72 74 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/keyframeexpand.svg") Tj
ET
endstream
endobj

125 0 obj
<<
	/Length 94
>>
stream
BT
	/Plain 12 Tf
	171 86 Td
	1.0 Tw
	(We can make the rectangle width dynamic by adding) Tj
ET
endstream
endobj

124 0 obj
<<
	/Length 48
>>
stream
BT
	/Plain 12 Tf
	150 86 Td
	1.0 Tw
	()).) Tj
ET
endstream
endobj

123 0 obj
<<
	/Length 58
>>
stream
BT
	/Emphasis 12 Tf
	72 86 Td
	1.0 Tw
	(kixJYgjSUAU) Tj
ET
endstream
endobj

122 0 obj
<<
	/Length 59
>>
stream
BT
	/Plain 12 Tf
	392 98 Td
	1.0 Tw
	(This excellent) Tj
ET
endstream
endobj

121 0 obj
<<
	/Length 89
>>
stream
BT
	/Plain 12 Tf
	72 98 Td
	1.0 Tw
	(This problem is known as topological sorting.) Tj
ET
endstream
endobj

120 0 obj
<<
	/Length 108
>>
stream
BT
	/Plain 12 Tf
	72 110 Td
	1.0 Tw
	(But we need to evaluate each node only once each child node has) Tj
ET
endstream
endobj

119 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 122 Td
	1.0 Tw
	(To do this we store a function at each node, in the case of) Tj
ET
endstream
endobj

118 0 obj
<<
	/Length 108
>>
stream
BT
	/Plain 12 Tf
	72 134 Td
	1.0 Tw
	(At each node of this graph, we want to compute the value of the) Tj
ET
endstream
endobj

117 0 obj
<<
	/Length 55
>>
stream
BT
	/Plain 12 Tf
	405 146 Td
	1.0 Tw
	(dark.svg") Tj
ET
endstream
endobj

116 0 obj
<<
	/Length 54
>>
stream
BT
	/Emphasis 12 Tf
	370 146 Td
	1.0 Tw
	(start) Tj
ET
endstream
endobj

115 0 obj
<<
	/Length 87
>>
stream
BT
	/Plain 12 Tf
	72 146 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/keyframe) Tj
ET
endstream
endobj

114 0 obj
<<
	/Length 97
>>
stream
BT
	/Plain 12 Tf
	72 158 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/keyframestart.svg") Tj
ET
endstream
endobj

113 0 obj
<<
	/Length 103
>>
stream
BT
	/Plain 12 Tf
	72 170 Td
	1.0 Tw
	(Continuing for all geometries we form the following graph,) Tj
ET
endstream
endobj

112 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 182 Td
	1.0 Tw
	(We indicate this dependency with an arrow from the x position) Tj
ET
endstream
endobj

111 0 obj
<<
	/Length 102
>>
stream
BT
	/Plain 12 Tf
	72 194 Td
	1.0 Tw
	(The x position of geometry 4 depends on the x position of) Tj
ET
endstream
endobj

110 0 obj
<<
	/Length 55
>>
stream
BT
	/Plain 12 Tf
	391 206 Td
	1.0 Tw
	(dark.svg") Tj
ET
endstream
endobj

109 0 obj
<<
	/Length 52
>>
stream
BT
	/Emphasis 12 Tf
	370 206 Td
	1.0 Tw
	(img) Tj
ET
endstream
endobj

108 0 obj
<<
	/Length 87
>>
stream
BT
	/Plain 12 Tf
	72 206 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/keyframe) Tj
ET
endstream
endobj

107 0 obj
<<
	/Length 95
>>
stream
BT
	/Plain 12 Tf
	72 218 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/keyframeimg.svg") Tj
ET
endstream
endobj

106 0 obj
<<
	/Length 58
>>
stream
BT
	/Plain 12 Tf
	392 230 Td
	1.0 Tw
	(Consider the) Tj
ET
endstream
endobj

105 0 obj
<<
	/Length 90
>>
stream
BT
	/Plain 12 Tf
	72 230 Td
	1.0 Tw
	(This will be extended to construct keyframes.) Tj
ET
endstream
endobj

104 0 obj
<<
	/Length 48
>>
stream
BT
	/Plain 12 Tf
	491 242 Td
	1.0 Tw
	(We) Tj
ET
endstream
endobj

103 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 242 Td
	1.0 Tw
	(The keyframing system is based on a directed acyclic graph.) Tj
ET
endstream
endobj

102 0 obj
<<
	/Length 107
>>
stream
BT
	/Plain 12 Tf
	72 254 Td
	1.0 Tw
	(Keyframing allows us to animate the graphic and have the width) Tj
ET
endstream
endobj

101 0 obj
<<
	/Length 99
>>
stream
BT
	/Plain 12 Tf
	72 266 Td
	1.0 Tw
	(Currently the rectangle is static and the width of the) Tj
ET
endstream
endobj

100 0 obj
<<
	/Length 100
>>
stream
BT
	/Plain 12 Tf
	72 278 Td
	1.0 Tw
	(![keyframe](/assets/chroma-graphics/keyframeartist.png)) Tj
ET
endstream
endobj

99 0 obj
<<
	/Length 107
>>
stream
BT
	/Plain 12 Tf
	72 290 Td
	1.0 Tw
	(In Chroma Artist, the following image shows an example of this) Tj
ET
endstream
endobj

98 0 obj
<<
	/Length 101
>>
stream
BT
	/Plain 12 Tf
	72 302 Td
	1.0 Tw
	(Since the text geometries and circle are parented to the) Tj
ET
endstream
endobj

97 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 314 Td
	1.0 Tw
	(The designer could set the default position, width and height) Tj
ET
endstream
endobj

96 0 obj
<<
	/Length 108
>>
stream
BT
	/Plain 12 Tf
	72 326 Td
	1.0 Tw
	(An example of this functionality is a simple lower frame super,) Tj
ET
endstream
endobj

95 0 obj
<<
	/Length 103
>>
stream
BT
	/Plain 12 Tf
	72 338 Td
	1.0 Tw
	(Chroma Artist gives an easy interface to specify this tree) Tj
ET
endstream
endobj

94 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 350 Td
	1.0 Tw
	(This gives the geometries a tree structure, and position of a) Tj
ET
endstream
endobj

93 0 obj
<<
	/Length 107
>>
stream
BT
	/Plain 12 Tf
	72 362 Td
	1.0 Tw
	(To enable easier manipulation of graphics, each geometry has a) Tj
ET
endstream
endobj

92 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 374 Td
	1.0 Tw
	(In the discussion of Chroma Engine, we omitted the discussion) Tj
ET
endstream
endobj

91 0 obj
<<
	/Length 103
>>
stream
BT
	/Plain 12 Tf
	72 386 Td
	1.0 Tw
	(The key difference between Chroma Viz and Chroma Artist is) Tj
ET
endstream
endobj

90 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 398 Td
	1.0 Tw
	(Chroma Artist provides a UI for designing templates which can) Tj
ET
endstream
endobj

89 0 obj
<<
	/Length 47
>>
stream
BT
	/Plain 20 Tf
	233 420 Td
	1.0 Tw
	( ) Tj
ET
endstream
endobj

88 0 obj
<<
	/Length 59
>>
stream
BT
	/Strong 20 Tf
	72 420 Td
	1.0 Tw
	(Chroma Artist) Tj
ET
endstream
endobj

87 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 450 Td
	1.0 Tw
	(Chroma Artist/Viz and Engine using GET requests to retrieve) Tj
ET
endstream
endobj

86 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 462 Td
	1.0 Tw
	(Chroma Artist is currently the only application which makes) Tj
ET
endstream
endobj

85 0 obj
<<
	/Length 101
>>
stream
BT
	/Plain 12 Tf
	72 474 Td
	1.0 Tw
	(Chroma Hub implements a REST API for updating/retrieving) Tj
ET
endstream
endobj

84 0 obj
<<
	/Length 52
>>
stream
BT
	/Plain 12 Tf
	448 486 Td
	1.0 Tw
	(Golang) Tj
ET
endstream
endobj

83 0 obj
<<
	/Length 58
>>
stream
BT
	/Code 12 Tf
	356 486 Td
	1.0 Tw
	(encoding/json) Tj
ET
endstream
endobj

82 0 obj
<<
	/Length 67
>>
stream
BT
	/Plain 12 Tf
	207 486 Td
	1.0 Tw
	(Internally we use the) Tj
ET
endstream
endobj

81 0 obj
<<
	/Length 47
>>
stream
BT
	/Plain 12 Tf
	200 486 Td
	1.0 Tw
	(.) Tj
ET
endstream
endobj

80 0 obj
<<
	/Length 62
>>
stream
BT
	/Code 12 Tf
	72 486 Td
	1.0 Tw
	(hub/chroma_hub.sql) Tj
ET
endstream
endobj

79 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 498 Td
	1.0 Tw
	(Chroma Hub wraps a SQL database, which currently needs to be) Tj
ET
endstream
endobj

78 0 obj
<<
	/Length 107
>>
stream
BT
	/Plain 12 Tf
	72 510 Td
	1.0 Tw
	(Chroma Hub also stores any assets needed by the templates such) Tj
ET
endstream
endobj

77 0 obj
<<
	/Length 100
>>
stream
BT
	/Plain 12 Tf
	72 522 Td
	1.0 Tw
	(The purpose of Chroma Hub is to synchronize the graphic) Tj
ET
endstream
endobj

76 0 obj
<<
	/Length 47
>>
stream
BT
	/Plain 20 Tf
	196 544 Td
	1.0 Tw
	( ) Tj
ET
endstream
endobj

75 0 obj
<<
	/Length 56
>>
stream
BT
	/Strong 20 Tf
	72 544 Td
	1.0 Tw
	(Chroma Hub) Tj
ET
endstream
endobj

74 0 obj
<<
	/Length 97
>>
stream
BT
	/Plain 12 Tf
	72 574 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/chroma-engine.png") Tj
ET
endstream
endobj

73 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 586 Td
	1.0 Tw
	(Finally each geometry in the page is rendered to the screen) Tj
ET
endstream
endobj

72 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 598 Td
	1.0 Tw
	(For smooth animations, we use a bezier curve to control the) Tj
ET
endstream
endobj

71 0 obj
<<
	/Length 58
>>
stream
BT
	/Plain 12 Tf
	420 610 Td
	1.0 Tw
	(The keyframe) Tj
ET
endstream
endobj

70 0 obj
<<
	/Length 94
>>
stream
BT
	/Plain 12 Tf
	72 610 Td
	1.0 Tw
	(This includes the absolute position calculations.) Tj
ET
endstream
endobj

69 0 obj
<<
	/Length 103
>>
stream
BT
	/Plain 12 Tf
	72 622 Td
	1.0 Tw
	(After receiving the graphics request and any image assets,) Tj
ET
endstream
endobj

68 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 634 Td
	1.0 Tw
	(In later render calls, if the image id matches the currently) Tj
ET
endstream
endobj

67 0 obj
<<
	/Length 107
>>
stream
BT
	/Plain 12 Tf
	72 646 Td
	1.0 Tw
	(Then we store this data for later use, as well as decoding the) Tj
ET
endstream
endobj

66 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 658 Td
	1.0 Tw
	(Chroma Hub first send 4 bytes with the length of the image,) Tj
ET
endstream
endobj

65 0 obj
<<
	/Length 108
>>
stream
BT
	/Plain 12 Tf
	72 670 Td
	1.0 Tw
	(Image assets are also contained in Chroma Hub, so before we can) Tj
ET
endstream
endobj

64 0 obj
<<
	/Length 102
>>
stream
BT
	/Plain 12 Tf
	72 682 Td
	1.0 Tw
	(GTK restrictions mean we can only have 8 stencil buffers,) Tj
ET
endstream
endobj

63 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 694 Td
	1.0 Tw
	(To achieve this we utilise OpenGL stencil buffers, keeping a) Tj
ET
endstream
endobj

62 0 obj
<<
	/Length 65
>>
stream
BT
	/Plain 12 Tf
	356 706 Td
	1.0 Tw
	(Each geometry has a) Tj
ET
endstream
endobj

61 0 obj
<<
	/Length 85
>>
stream
BT
	/Plain 12 Tf
	72 706 Td
	1.0 Tw
	(Chroma Engine features geometry masking.) Tj
ET
endstream
endobj

60 0 obj
<<
	/Length 107
>>
stream
BT
	/Plain 12 Tf
	72 718 Td
	1.0 Tw
	(As we parse the string, we set the values for each geometry of) Tj
ET
endstream
endobj

59 0 obj
<<
	/Length 108
>>
stream
BT
	/Plain 12 Tf
	72 730 Td
	1.0 Tw
	(Then each geometry, specified by an integer, followed by a list) Tj
ET
endstream
endobj

58 0 obj
<<
	/Type /Page
	/Contents 51 0 R
	/Resources 57 0 R
>>
endobj

57 0 obj
<<
	/Font 56 0 R
>>
endobj

56 0 obj
<<
	/Plain 52 0 R
	/Strong 53 0 R
	/Emphasis 54 0 R
	/Code 55 0 R
>>
endobj

55 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier
>>
endobj

54 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier-Italic
>>
endobj

53 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier-Bold
>>
endobj

52 0 obj
<<
	/Type /Font
	/Subtype /Type1
	/BaseFont /Courier
>>
endobj

51 0 obj
[
	1 0 R
	2 0 R
	3 0 R
	4 0 R
	5 0 R
	6 0 R
	7 0 R
	8 0 R
	9 0 R
	10 0 R
	11 0 R
	12 0 R
	13 0 R
	14 0 R
	15 0 R
	16 0 R
	17 0 R
	18 0 R
	19 0 R
	20 0 R
	21 0 R
	22 0 R
	23 0 R
	24 0 R
	25 0 R
	26 0 R
	27 0 R
	28 0 R
	29 0 R
	30 0 R
	31 0 R
	32 0 R
	33 0 R
	34 0 R
	35 0 R
	36 0 R
	37 0 R
	38 0 R
	39 0 R
	40 0 R
	41 0 R
	42 0 R
	43 0 R
	44 0 R
	45 0 R
	46 0 R
	47 0 R
	48 0 R
	49 0 R
	50 0 R
]
endobj

50 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 78 Td
	1.0 Tw
	(The string contains a header with the format version, layer,) Tj
ET
endstream
endobj

49 0 obj
<<
	/Length 66
>>
stream
BT
	/Plain 12 Tf
	356 90 Td
	1.0 Tw
	(is sufficient for our) Tj
ET
endstream
endobj

48 0 obj
<<
	/Length 54
>>
stream
BT
	/Code 12 Tf
	285 90 Td
	1.0 Tw
	(name=attr#) Tj
ET
endstream
endobj

47 0 obj
<<
	/Length 74
>>
stream
BT
	/Plain 12 Tf
	72 90 Td
	1.0 Tw
	(A simple name-attribute format) Tj
ET
endstream
endobj

46 0 obj
<<
	/Length 57
>>
stream
BT
	/Plain 12 Tf
	384 102 Td
	1.0 Tw
	(To render a) Tj
ET
endstream
endobj

45 0 obj
<<
	/Length 89
>>
stream
BT
	/Plain 12 Tf
	72 102 Td
	1.0 Tw
	(Chroma Engine renders graphics using OpenGL.) Tj
ET
endstream
endobj

44 0 obj
<<
	/Length 108
>>
stream
BT
	/Plain 12 Tf
	72 114 Td
	1.0 Tw
	(A middle ground between these two options would be allowing the) Tj
ET
endstream
endobj

43 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 126 Td
	1.0 Tw
	(This has the added cost of needing to allocate resources for) Tj
ET
endstream
endobj

42 0 obj
<<
	/Length 101
>>
stream
BT
	/Plain 12 Tf
	72 138 Td
	1.0 Tw
	(This is done so Chroma Engine can build its own database) Tj
ET
endstream
endobj

41 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 150 Td
	1.0 Tw
	(On startup, Chroma Engine connects to Chroma Hub and requests) Tj
ET
endstream
endobj

40 0 obj
<<
	/Length 102
>>
stream
BT
	/Plain 12 Tf
	72 162 Td
	1.0 Tw
	(We compile both a library, which is used by Chroma Viz to) Tj
ET
endstream
endobj

39 0 obj
<<
	/Length 52
>>
stream
BT
	/Plain 12 Tf
	470 174 Td
	1.0 Tw
	(At its) Tj
ET
endstream
endobj

38 0 obj
<<
	/Length 101
>>
stream
BT
	/Plain 12 Tf
	72 174 Td
	1.0 Tw
	(Chroma Engine renders graphics requests from Chroma Viz.) Tj
ET
endstream
endobj

37 0 obj
<<
	/Length 47
>>
stream
BT
	/Plain 20 Tf
	233 196 Td
	1.0 Tw
	( ) Tj
ET
endstream
endobj

36 0 obj
<<
	/Length 59
>>
stream
BT
	/Strong 20 Tf
	72 196 Td
	1.0 Tw
	(Chroma Engine) Tj
ET
endstream
endobj

35 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 226 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/chroma-viz.png" alt="Chroma) Tj
ET
endstream
endobj

34 0 obj
<<
	/Length 103
>>
stream
BT
	/Plain 12 Tf
	72 238 Td
	1.0 Tw
	(Chroma Engine parses the message and updates the templates) Tj
ET
endstream
endobj

33 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 250 Td
	1.0 Tw
	(Chroma Viz encodes the attributes of a page and sends it to) Tj
ET
endstream
endobj

32 0 obj
<<
	/Length 100
>>
stream
BT
	/Plain 12 Tf
	72 272 Td
	1.0 Tw
	(Take Off runs from the second last Keyframe to the last) Tj
ET
endstream
endobj

31 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 294 Td
	1.0 Tw
	(Continue runs from the current Keyframe to the next Keyframe.) Tj
ET
endstream
endobj

30 0 obj
<<
	/Length 92
>>
stream
BT
	/Plain 12 Tf
	72 316 Td
	1.0 Tw
	(Take On animates from Keyframe 1 to Keyframe 2.) Tj
ET
endstream
endobj

29 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 338 Td
	1.0 Tw
	($ \texttt{Take Off} $, send pages to connected Chroma Engine) Tj
ET
endstream
endobj

28 0 obj
<<
	/Length 107
>>
stream
BT
	/Plain 12 Tf
	72 350 Td
	1.0 Tw
	(The actions at the top of the editor panel, $ \texttt{Take On,) Tj
ET
endstream
endobj

27 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 362 Td
	1.0 Tw
	(Chroma Viz sends pages to layer 0 of the preview window, so) Tj
ET
endstream
endobj

26 0 obj
<<
	/Length 98
>>
stream
BT
	/Plain 12 Tf
	72 374 Td
	1.0 Tw
	(Chroma Engine provides a C library which can create a) Tj
ET
endstream
endobj

25 0 obj
<<
	/Length 50
>>
stream
BT
	/Plain 12 Tf
	477 386 Td
	1.0 Tw
	(When) Tj
ET
endstream
endobj

24 0 obj
<<
	/Length 102
>>
stream
BT
	/Plain 12 Tf
	72 386 Td
	1.0 Tw
	(Each connection is either a Engine or Preview connection.) Tj
ET
endstream
endobj

23 0 obj
<<
	/Length 98
>>
stream
BT
	/Plain 12 Tf
	72 398 Td
	1.0 Tw
	(Chroma Viz can connect to any number of Chroma Engine) Tj
ET
endstream
endobj

22 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 410 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/show.png" alt="Templates">) Tj
ET
endstream
endobj

21 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 422 Td
	1.0 Tw
	(Pages form shows, which can be saved to/loaded from disk for) Tj
ET
endstream
endobj

20 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 434 Td
	1.0 Tw
	(Chroma Hub implements a REST API for accessing assets such as) Tj
ET
endstream
endobj

19 0 obj
<<
	/Length 103
>>
stream
BT
	/Plain 12 Tf
	72 446 Td
	1.0 Tw
	(Chroma Viz will then send a request to Chroma Hub for this) Tj
ET
endstream
endobj

18 0 obj
<<
	/Length 107
>>
stream
BT
	/Plain 12 Tf
	72 458 Td
	1.0 Tw
	(Pages can be created from templates, by double clicking on the) Tj
ET
endstream
endobj

17 0 obj
<<
	/Length 93
>>
stream
BT
	/Plain 12 Tf
	72 470 Td
	1.0 Tw
	(<img src="/assets/chroma-graphics/templates.png") Tj
ET
endstream
endobj

16 0 obj
<<
	/Length 105
>>
stream
BT
	/Plain 12 Tf
	72 482 Td
	1.0 Tw
	(Chroma Hub collects the template IDs of all templates in the) Tj
ET
endstream
endobj

15 0 obj
<<
	/Length 107
>>
stream
BT
	/Plain 12 Tf
	72 494 Td
	1.0 Tw
	(On startup, Chroma Viz requests the templates from Chroma Hub.) Tj
ET
endstream
endobj

14 0 obj
<<
	/Length 101
>>
stream
BT
	/Plain 12 Tf
	72 506 Td
	1.0 Tw
	(Chroma Viz manages templates at a high level, and issues) Tj
ET
endstream
endobj

13 0 obj
<<
	/Length 47
>>
stream
BT
	/Plain 20 Tf
	196 528 Td
	1.0 Tw
	( ) Tj
ET
endstream
endobj

12 0 obj
<<
	/Length 56
>>
stream
BT
	/Strong 20 Tf
	72 528 Td
	1.0 Tw
	(Chroma Viz) Tj
ET
endstream
endobj

11 0 obj
<<
	/Length 53
>>
stream
BT
	/Plain 12 Tf
	72 558 Td
	1.0 Tw
	(</video>) Tj
ET
endstream
endobj

10 0 obj
<<
	/Length 121
>>
stream
BT
	/Code 12 Tf
	96 594 Td
	1.0 Tw
	(<source src="https://github.com/jchilds0/chroma-viz/raw/main/data/demo.mp4"> ) Tj
ET
endstream
endobj

9 0 obj
<<
	/Length 78
>>
stream
	q
	72 618 451 -36 re
	DeviceRGB cs 0.78431374 0.78431374 0.78431374 sc
	f
	Q

endstream
endobj

8 0 obj
<<
	/Length 73
>>
stream
BT
	/Plain 12 Tf
	72 640 Td
	1.0 Tw
	(<video width="720" controls>) Tj
ET
endstream
endobj

7 0 obj
<<
	/Length 104
>>
stream
BT
	/Plain 12 Tf
	72 652 Td
	1.0 Tw
	(Chroma Engine is built in C and is contained in the [Chroma) Tj
ET
endstream
endobj

6 0 obj
<<
	/Length 99
>>
stream
BT
	/Plain 12 Tf
	72 664 Td
	1.0 Tw
	(Chroma Viz, Hub and Artist are built in Golang and are) Tj
ET
endstream
endobj

5 0 obj
<<
	/Length 106
>>
stream
BT
	/Plain 12 Tf
	72 676 Td
	1.0 Tw
	(Currently this collection consists of Chroma Viz, Hub, Engine) Tj
ET
endstream
endobj

4 0 obj
<<
	/Length 103
>>
stream
BT
	/Plain 12 Tf
	72 688 Td
	1.0 Tw
	(Inspiration is taken from the VizRT suite of applications.) Tj
ET
endstream
endobj

3 0 obj
<<
	/Length 98
>>
stream
BT
	/Plain 12 Tf
	72 700 Td
	1.0 Tw
	(The aim of this project is to develop a collection of) Tj
ET
endstream
endobj

2 0 obj
<<
	/Length 47
>>
stream
BT
	/Plain 20 Tf
	221 722 Td
	1.0 Tw
	( ) Tj
ET
endstream
endobj

1 0 obj
<<
	/Length 58
>>
stream
BT
	/Strong 20 Tf
	72 722 Td
	1.0 Tw
	(Introduction) Tj
ET
endstream
endobj

xref
0 169
0000000000 65535 f
0000022916 00000 n
0000022817 00000 n
0000022667 00000 n
0000022511 00000 n
0000022352 00000 n
0000022201 00000 n
0000022044 00000 n
0000021919 00000 n
0000021789 00000 n
0000021614 00000 n
0000021508 00000 n
0000021399 00000 n
0000021299 00000 n
0000021144 00000 n
0000020983 00000 n
0000020824 00000 n
0000020678 00000 n
0000020517 00000 n
0000020360 00000 n
0000020200 00000 n
0000020041 00000 n
0000019882 00000 n
0000019731 00000 n
0000019575 00000 n
0000019472 00000 n
0000019321 00000 n
0000019163 00000 n
0000019002 00000 n
0000018843 00000 n
0000018698 00000 n
0000018538 00000 n
0000018384 00000 n
0000018226 00000 n
0000018069 00000 n
0000017909 00000 n
0000017797 00000 n
0000017697 00000 n
0000017542 00000 n
0000017437 00000 n
0000017281 00000 n
0000017121 00000 n
0000016966 00000 n
0000016807 00000 n
0000016645 00000 n
0000016503 00000 n
0000016393 00000 n
0000016266 00000 n
0000016159 00000 n
0000016040 00000 n
0000015882 00000 n
0000015470 00000 n
0000015397 00000 n
0000015319 00000 n
0000015239 00000 n
0000015166 00000 n
0000015080 00000 n
0000015043 00000 n
0000014970 00000 n
0000014808 00000 n
0000014647 00000 n
0000014509 00000 n
0000014391 00000 n
0000014232 00000 n
0000014076 00000 n
0000013914 00000 n
0000013756 00000 n
0000013595 00000 n
0000013436 00000 n
0000013279 00000 n
0000013132 00000 n
0000013021 00000 n
0000012863 00000 n
0000012705 00000 n
0000012555 00000 n
0000012446 00000 n
0000012346 00000 n
0000012192 00000 n
0000012031 00000 n
0000011872 00000 n
0000011757 00000 n
0000011657 00000 n
0000011537 00000 n
0000011426 00000 n
0000011321 00000 n
0000011166 00000 n
0000011008 00000 n
0000010850 00000 n
0000010738 00000 n
0000010638 00000 n
0000010478 00000 n
0000010321 00000 n
0000010161 00000 n
0000010000 00000 n
0000009840 00000 n
0000009683 00000 n
0000009521 00000 n
0000009361 00000 n
0000009206 00000 n
0000009045 00000 n
0000008890 00000 n
0000008737 00000 n
0000008575 00000 n
0000008416 00000 n
0000008314 00000 n
0000008170 00000 n
0000008058 00000 n
0000007909 00000 n
0000007768 00000 n
0000007662 00000 n
0000007553 00000 n
0000007396 00000 n
0000007235 00000 n
0000007077 00000 n
0000006926 00000 n
0000006785 00000 n
0000006677 00000 n
0000006568 00000 n
0000006405 00000 n
0000006246 00000 n
0000006083 00000 n
0000005940 00000 n
0000005827 00000 n
0000005715 00000 n
0000005613 00000 n
0000005465 00000 n
0000005314 00000 n
0000004721 00000 n
0000004647 00000 n
0000004568 00000 n
0000004487 00000 n
0000004413 00000 n
0000004322 00000 n
0000004283 00000 n
0000004207 00000 n
0000004066 00000 n
0000003957 00000 n
0000003848 00000 n
0000003693 00000 n
0000003532 00000 n
0000003374 00000 n
0000003221 00000 n
0000003061 00000 n
0000002932 00000 n
0000002773 00000 n
0000002614 00000 n
0000002454 00000 n
0000002294 00000 n
0000002137 00000 n
0000001974 00000 n
0000001816 00000 n
0000001657 00000 n
0000001530 00000 n
0000001398 00000 n
0000001215 00000 n
0000001108 00000 n
0000000986 00000 n
0000000766 00000 n
0000000692 00000 n
0000000613 00000 n
0000000532 00000 n
0000000458 00000 n
0000000367 00000 n
0000000328 00000 n
0000000252 00000 n
0000000204 00000 n
0000000141 00000 n
0000000103 00000 n
0000000009 00000 n
trailer <<
	/Size 169
	/Root 168 0 R
>>
startxref
23026
%%EOF